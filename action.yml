name: 'Docker Build Pattern Action'
description: 'Builds and pushes an image to Docker using a common pattern'
author: 'TrueMark'
branding:
  icon: 'check-circle'
  color: 'red'

inputs:
  registry:
    required: true
    description: 'Docker registry to log into'
  username:
    required: true
    description: 'Docker username to log in with'
  password:
    required: true
    description: 'Docker password to log in with'
  image:
    required: true
    description: 'Docker image tag to build and push'
  context:
    required: false
    description: 'Location of the Dockerfile. Defaults to root'
    default: .

runs:
  using: 'composite'
  steps:
    # This is a separate action that sets up buildx runner
    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v2
    # So now you can use Actions' own caching!
    - name: Cache Docker layers
      uses: actions/cache@v2
      with:
        path: /tmp/.buildx-cache
        key: ${{ runner.os }}-buildx-${{ github.sha }}
        restore-keys: |
          ${{ runner.os }}-buildx-
    - name: Login to Docker
      uses: docker/login-action@v2
      with:
        registry: ${{ inputs.registry }}
        username: ${{ inputs.username }}
        password: ${{ inputs.password }}
    # And make it available for builds
    - name: Build and push
      uses: docker/build-push-action@v4
      with:
        context: ${{ inputs.context }}
        push: true
        tags: ${{ inputs.image }}
        cache-from: type=local,src=/tmp/.buildx-cache
        cache-to: type=local,dest=/tmp/.buildx-cache-new
      # This ugly bit is necessary if you don't want your cache to grow forever
      # until it hits GitHub's limit of 5GB.
      # Temp fix
      # https://github.com/docker/build-push-action/issues/252
      # https://github.com/moby/buildkit/issues/1896
    - name: Move cache
      shell: bash
      run: |
        rm -rf /tmp/.buildx-cache
        mv /tmp/.buildx-cache-new /tmp/.buildx-cache
